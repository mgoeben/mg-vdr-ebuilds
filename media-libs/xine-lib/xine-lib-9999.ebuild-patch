# Distributed under the terms of the GNU General Public License v2
# $Header: $

EAPI=1
inherit eutils flag-o-matic toolchain-funcs libtool mercurial

S="${WORKDIR}/xine-lib-1.2"

: ${EHG_REPO_URI:=http://hg.debian.org/hg/xine-lib/xine-lib-1.2}

DESCRIPTION="Core libraries for Xine movie player - 1.2 development branch"
HOMEPAGE="http://hg.debian.org/hg/xine-lib/xine-lib-1.2/"
#SRC_URI="http://www.jusst.de/vdpau/files/xine-lib-1.2/${MY_P}.diff.bz2"

LICENSE="GPL-2"
SLOT="1"
KEYWORDS="~x86 ~amd64"

IUSE="aalib libcaca -arts esd win32codecs nls +dvd +X directfb +vorbis +alsa
gnome sdl speex +theora ipv6 altivec opengl +aac fbcon +xv xvmc
samba dxr3 vidix mng +flac oss v4l xinerama vcd +a52 +mad imagemagick +dts
debug modplug -gtk pulseaudio -mmap truetype vdpau wavpack +xcb jack +musepack
real vdr"

RDEPEND="X? ( x11-libs/libXext
		x11-libs/libX11 )
	xv? ( x11-libs/libXv )
	xvmc? ( x11-libs/libXvMC )
	xinerama? ( x11-libs/libXinerama )
	win32codecs? ( >=media-libs/win32codecs-0.50 )
	esd? ( media-sound/esound )
	dvd? ( >=media-libs/libdvdcss-1.2.7 )
	arts? ( kde-base/arts )
	alsa? ( media-libs/alsa-lib )
	aalib? ( media-libs/aalib )
	directfb? ( >=dev-libs/DirectFB-0.9.9 )
	gnome? ( >=gnome-base/gnome-vfs-2.0 )
	flac? ( >=media-libs/flac-1.1.2 )
	sdl? ( >=media-libs/libsdl-1.1.5 )
	dxr3? ( >=media-libs/libfame-0.9.0 )
	vorbis? ( media-libs/libogg media-libs/libvorbis )
	theora? ( media-libs/libogg media-libs/libvorbis
>=media-libs/libtheora-1.0_alpha6 )
	speex? ( media-libs/libogg media-libs/libvorbis media-libs/speex )
	libcaca? ( >=media-libs/libcaca-0.99_beta1 )
	samba? ( net-fs/samba )
	mng? ( media-libs/libmng )
	vcd? ( media-video/vcdimager )
	a52? ( >=media-libs/a52dec-0.7.4-r5 )
	mad? ( media-libs/libmad )
	imagemagick? ( media-gfx/imagemagick )
	dts? ( || ( media-libs/libdca media-libs/libdts ) )
	>=media-video/ffmpeg-0.4.9_p20070129
	modplug? ( media-libs/libmodplug )
	musepack? ( media-sound/musepack-tools )
	nls? ( virtual/libintl )
	gtk? ( x11-libs/gtk+:2 )
	pulseaudio? ( media-sound/pulseaudio )
	truetype? ( media-libs/freetype:2 media-libs/fontconfig )
	vdpau? ( >=x11-drivers/nvidia-drivers-180.22 )
	virtual/libiconv
	wavpack? ( >=media-sound/wavpack-4.31 )
	xcb? ( >=x11-libs/libxcb-1.0 )
	jack? ( >=media-sound/jack-audio-connection-kit-0.100 )
	real? (
		x86? ( media-libs/win32codecs )
		x86-fbsd? ( media-libs/win32codecs )
		amd64? ( media-libs/amd64codecs ) )"

DEPEND="${RDEPEND}
	X? ( x11-libs/libXt
		 x11-proto/xproto
		 x11-proto/videoproto
		 x11-proto/xf86vidmodeproto
		 xinerama? ( x11-proto/xineramaproto ) )
	v4l? ( virtual/os-headers )
	app-text/docbook-xml-dtd:4.4
	dev-util/pkgconfig
	sys-devel/libtool
	nls? ( sys-devel/gettext )
	|| ( www-client/lynx www-client/w3m )" # needed for xmlto

src_unpack() {
	mercurial_src_unpack
	cd "${WORKDIR}" || die "cd to workdir failed"
#	unpack ${A}
	cd "${S}" || die "cd failed"

#	epatch "${FILESDIR}"/xine-lib-1.2-hg-compile-error.diff
	sed -i src/xine-engine/Makefile.am -e "s/\"\$(builddir)\"\///g"
#	sed -i src/video_out/video_out_vdpau.c -e "s%#define LOCKDISPLAY%//#define
#	LOCKDISPLAY%"
#	epatch
#	"${FILESDIR}"/xine-lib-1.2-r11590-vdpau-extensions-v16-stream-start-v100614.diff
	#epatch "${FILESDIR}"/xine-lib-1.2-r11590-vdpau-extensions-v16.diff
	#epatch "${FILESDIR}"/xine-lib-1.2-r11592-vdpau-extensions-v18.diff
	epatch "${FILESDIR}"/xine-lib-1.2-r11592-vdpau-extensions-v18-stream-start-v100614.diff
	sed -i src/video_out/video_out_vdpau.c -e "s%//#define LOCKDISPLAY%#define
LOCKDISPLAY%"

	use vdr && sed -i src/vdr/input_vdr.c -e '/define
VDR_ABS_FIFO_DIR/s|".*"|"/var/vdr/xine"|'

	./autogen.sh noconfig || die "autogen failed"
}

src_compile() {

	#prevent quicktime crashing
	append-flags -frename-registers -ffunction-sections

	# Specific workarounds for too-few-registers arch...
	if [[ $(tc-arch) == "x86" ]]; then
		filter-flags -fforce-addr
		filter-flags -momit-leaf-frame-pointer # break on gcc 3.4/4.x
		filter-flags -fno-omit-frame-pointer #breaks per bug #149704
		is-flag -O? || append-flags -O2
	fi

	local myconf

	# enable/disable appropiate optimizations on sparc
	[[ "${PROFILE_ARCH}" == "sparc64" ]] && myconf="${myconf} --enable-vis"
	[[ "${PROFILE_ARCH}" == "sparc" ]] && myconf="${myconf} --disable-vis"

	# The default CFLAGS (-O) is the only thing working on hppa.
	use hppa && unset CFLAGS
	if use vdpau ; then
		myconf="${myconf} --without-xcb"
	fi
	# Too many file names are the same (xine_decoder.c), change the builddir
	# So that the relative path is used to identify them.
	mkdir "${WORKDIR}/build"

	elibtoolize
	ECONF_SOURCE="${S}" econf \
		--enable-asf \
		--disable-optimizations \
		${myconf} \
		--with-xv-path=/usr/$(get_libdir) \
		--with-w32-path=/usr/$(ABI=x86 get_libdir)/win32 \
		--with-real-codecs-path=/usr/$(get_libdir)/codecs \
		--enable-fast-install \
		--disable-dependency-tracking || die "econf failed."

	emake || die "emake failed."
}

src_install() {
	emake -j1 DESTDIR="${D}" \
		docdir="/usr/share/doc/${PF}" htmldir="/usr/share/doc/${PF}/html" \
		install || die "emake install failed."
}

